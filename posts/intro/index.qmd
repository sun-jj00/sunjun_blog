---
title: "LS_school"
author: "Kim Sun Jun"
date: "2025-07-22"
jupyter: 
  kernel: ls_gen_5
categories: [news, code, analysis]
---


복습용 블로그

## 7월 22일 복습

-날짜, 문자 다루기 연습

```{python}
import pandas as pd

df = pd.read_csv('./data/bike_data.csv')
print(df.head())
df['datetime'] =pd.to_datetime(df['datetime'])

#1번
df['hour'] = df['datetime'].dt.hour

df['hour']
df['date'] = df['datetime'].dt.date
our = df.loc[df['season'] == 1]

our.groupby('hour')['count'].mean().reset_index()

#2
df.groupby('season')['count'].mean().reset_index()


#3
df['month'] = df['datetime'].dt.month

df.groupby('month')['count'].sum().reset_index()


#4
df['date'] = df['datetime'].dt.date
res4 = df.groupby('date')['count'].sum().reset_index()
dat = res4.loc[res4['count'].idxmax()][0]
coun = res4.loc[res4['count'].idxmax()][1]
f'날짜는 {dat}, 카운트는 {coun}'

#5
df.groupby('hour')['count'].mean().reset_index()

#6 특정 요일(weekday) 동안의 총 대여량(count)을 구하시오.
df
df['week'] = df['datetime'].dt.day_name()
dfs = df.groupby('week')['count'].sum().reset_index()
f'{dfs.iloc[1,0]}의 총 대여량은 {dfs.iloc[1,1]} 입니다'

#7
#주어진 Bike Sharing 데이터를 사용하여 넓은 형식(wide format)에서 긴 형식(long format)으로 변환하시오. 
# casual과 registered 열을 하나의 열로 변환하고, 각 기록의 대여 유형과 대여 수를 포함하는 긴 형식 데이터프레임을 만드시오.
df['casual']
df7 = df.loc[:, ['datetime', 'season', 'casual', 'registered']]

df7
df8 = pd.melt(df7, 
        id_vars = ['datetime', 'season'],
        var_name = 'user_type',
        value_vars= ['casual', 'registered'],
        value_name= 'user_count')

#8
#이전에 생성한 긴 형식 데이터프레임을 활용하여 
# 각 계절(season)별로 casual과 registered 사용자의 평균 대여 수(count)를 구하시오.

df8.groupby(['season', 'user_type'])['user_count'].mean().reset_index()


```

```{python}
import pandas as pd
#9
pd.set_option('display.max_columns', None) # 전체 칼럼 정보 프린트 옵션
df = pd.read_csv('./data/logdata.csv')
print(df.head(2))

df8 = df['로그'].str.extractall(r'([0-9]+)').reset_index()
df8
df['숫자'] = df8.groupby('level_0')[0].apply(lambda x: ' '.join(x))


df
#10
df['시간'] = df['로그'].str.extract(r'(\s[0-9:]+)')

#11
df['로그']
df['한글'] = df['로그'].str.extract(r'(\s[가-힣]+)')
df['한글']

#12 특수문자 제거
df['특수문자 제거'] = df['로그'].str.replace(r'[^a-zA-Z0-9가-힣\s]', '', regex=True)
df['특수문자 제거']

#로그 칼럼에서 유저, 
# Amount 값을 추출한 후 각 유저별 Amount의 평균값을 계산하시오.

df['user'] = df['로그'].str.extract(r'(\s[가-힣]+)')
df10 = df['로그'].str.extract(r'(\s[가-힣]+)').reset_index()
df['로그'].str.extract(r'Amount:\s(\d+)')
#찾고 싶은거에만 괄호 치면 됨.
df10

df
df['로그'][27]
df9 = df['로그'].str.extract(r'(\s\d{4})').reset_index()
df9
df11 = pd.merge(df10, df9,
                on= 'index', 
                how = 'left')
df11 = df11.dropna()
df11['0_y'] = pd.to_numeric(df11['0_y'], errors='coerce')
df12 = df11.groupby('0_x')['0_y'].mean().reset_index()
df12 = df12.rename(columns = {'0_x': 'user', '0_y':'amount'})
df12

```